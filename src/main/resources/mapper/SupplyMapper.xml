<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbh.dao.SupplyMapper">
    <resultMap id="BaseResultMap" type="com.hbh.entity.Supply">
        <id column="supid" jdbcType="VARCHAR" property="supid"/>
        <result column="suppname" jdbcType="VARCHAR" property="suppname"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="person" jdbcType="VARCHAR" property="person"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="emali" jdbcType="VARCHAR" property="emali"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        supid, suppname, tel, person, address, emali
    </sql>
    <select id="selectByExample" parameterType="com.hbh.entity.SupplyExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from supply
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from supply
        where supid = #{supid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from supply
        where supid = #{supid,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.hbh.entity.Supply">
        insert into supply (supid, suppname, tel,
                            person, address, emali)
        values (#{supid,jdbcType=VARCHAR}, #{suppname,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},
                #{person,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{emali,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.hbh.entity.Supply">
        update supply
        set suppname = #{suppname,jdbcType=VARCHAR},
            tel      = #{tel,jdbcType=VARCHAR},
            person   = #{person,jdbcType=VARCHAR},
            address  = #{address,jdbcType=VARCHAR},
            emali    = #{emali,jdbcType=VARCHAR}
        where supid = #{supid,jdbcType=VARCHAR}
    </update>
    <select id="getbyparams" resultMap="BaseResultMap">
        select * from supply
        <where>
            <if test="supid!=null and supid!=''">
                and supid = #{supid,jdbcType=VARCHAR}
            </if>
            <if test="suppname!=null and suppname!=''">
                and suppname like concat('%',#{suppname},'%')
            </if>

        </where>
    </select>
</mapper>